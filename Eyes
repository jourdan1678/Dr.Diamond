void loop()
{
  lookLeftAndRight();
   lookUpAndDown();
   blinking();
   
 }

timesToBlink = random(0, 10000);

  for(int b=0; b<timesToBlink; b++)
  {
     blink();
  }
void loop()
{
  lookLeftAndRight();
   lookUpAndDown();
  
   if(random(0, 101) > 20)
   {
     blinking();
   }
 }
/// Randomize functions
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

// called this way, it uses the default address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

#
//Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(0x41);


#define SERVOMIN  (250) // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  (400) // this is the 'maximum' pulse length count (out of 4096)


int servo0 = 0;
int servo1 = 1;
int servo2 = 2;

void setup() {
  Serial.begin(9600);


  pwm.begin();

  pwm.setPWMFreq(60);
}

// you can use this function if you'd like to set the pulse length in seconds
// e.g. setServoPulse(0, 0.001) is a ~1 millisecond pulse width. its not precise!
void setServoPulse(uint8_t n, double pulse) {
  double pulselength;

  pulselength = 1000000;   // 1,000,000 us per second
  pulselength /= 60;   // 60 Hz
  Serial.print(pulselength); Serial.println(" us per period");
  pulselength /= 4096;  // 12 bits of resolution
  Serial.print(pulselength); Serial.println(" us per bit");
  pulse *= 1000;
  pulse /= pulselength;
  Serial.println(pulse);
  pwm.setPWM(n, 0, pulse);
}

void loop()
{
  lookLeftAndRight();
   lookUpAndDown();
   blinking();
   
 }
   /// Servo 0
  void lookLeftAndRight(){
 
  Serial.println(servo0);
  for (uint16_t pulselen = SERVOMIN; pulselen < SERVOMAX; pulselen += random(1, 5)) {
    pwm.setPWM(servo0, 0, pulselen);
    delay(random(3,6));
  }
  for (uint16_t pulselen = SERVOMAX; pulselen > SERVOMIN; pulselen -= random(1, 3)) {
    pwm.setPWM(servo0, 0, pulselen);
    delay(random(50,800));
  }}


  /// SERVO 1
  void lookUpAndDown()
  {

  for (uint16_t pulselen = SERVOMIN; pulselen < SERVOMAX; pulselen++) {
    pwm.setPWM(servo1, 0, pulselen);
    delay(random(3,8));
 }
  for (uint16_t pulselen = SERVOMAX; pulselen > SERVOMIN; pulselen--) {
    pwm.setPWM(servo1, 0, pulselen);
    delay(random(50,800));
  }}

 
/// Servo 2
void blinking() {
    for (uint16_t pulselen = SERVOMIN; pulselen < SERVOMAX; pulselen++) {
    pwm.setPWM(servo2, 0, pulselen);
   
 
  delay(20);// Delay
  for (uint16_t pulselen = SERVOMAX; pulselen > SERVOMIN; pulselen--) {
    pwm.setPWM(servo2, 0, pulselen);
 
  }


 
 
 
}}
